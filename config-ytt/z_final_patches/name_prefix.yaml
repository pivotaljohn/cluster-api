#@ load("@ytt:overlay", "overlay")

#@ def ensure_prefix(curr, prefix):
#@   return prefix+curr if not curr.startswith(prefix) else curr
#@ end

#@ namePrefix = "capi-"

#@overlay/match by=overlay.not_op(overlay.subset({"kind": "CustomResourceDefinition"})), expects="1+"
---
metadata:
  #@overlay/replace via=ensure_prefix
  name: #@ namePrefix
#@overlay/match when=1
roleRef:
  #@overlay/replace via=ensure_prefix
  name: #@ namePrefix
#@overlay/match when=1
spec:
  #@overlay/match when=1
  dnsNames:
  #@overlay/match by=overlay.all, expects="0+"
  #@overlay/replace via=ensure_prefix
  - #@ namePrefix
  #@overlay/match when=1
  template:
    #@overlay/match when=1
    spec:
      #@overlay/match when=1
      volumes:
      #@overlay/match by=overlay.all
      - 
        #@overlay/match when=1
        secret:
          #@overlay/replace via=ensure_prefix
          secretName: #@ namePrefix
  #@overlay/match when=1
  issuerRef:
    #@overlay/replace via=ensure_prefix
    name: #@ namePrefix
  #@overlay/match when=1
  #@overlay/replace via=ensure_prefix
  secretName: #@ namePrefix


#@overlay/match by=overlay.all, expects="1+"
---
#@overlay/match-child-defaults missing_ok=True
metadata:
  labels:
    cluster.x-k8s.io/provider: "cluster-api"
#@overlay/match when=1
spec:
  #@overlay/match when=1
  selector:
    #@overlay/match when=1
    matchLabels:
      #@overlay/match missing_ok=True
      cluster.x-k8s.io/provider: "cluster-api"
  #@overlay/match when=1
  template:
    #@overlay/match when=1
    metadata:
      #@overlay/match when=1
      labels:
        #@overlay/match missing_ok=True
        cluster.x-k8s.io/provider: "cluster-api"
 
#@overlay/match by=overlay.subset({"kind": "Service"}), expects="1+"
---
spec:
  #@overlay/match missing_ok=True
  selector:
    #@overlay/match missing_ok=True
    cluster.x-k8s.io/provider: "cluster-api"

#@ NON_NAMESPACED = [
#@   "ComponentStatus",
#@   "Namespace",
#@   "Node",
#@   "PersistentVolume",
#@   "MutatingWebhookConfiguration",
#@   "ValidatingWebhookConfiguration",
#@   "CustomResourceDefinition",
#@   "APIService",
#@   "TokenReview",
#@   "SelfSubjectAccessReview",
#@   "SelfSubjectRulesReview",
#@   "SubjectAccessReview",
#@   "CertificateSigningRequest",
#@   "RuntimeClass",
#@   "PodSecurityPolicy",
#@   "ClusterRoleBinding",
#@   "ClusterRole",
#@   "PriorityClass",
#@   "CSIDriver",
#@   "CSINode",
#@   "StorageClass",
#@   "VolumeAttachment"
#@ ]

#@ def namespaceable(idx, left, right):
#@   return left["kind"] not in NON_NAMESPACED
#@ end

#@overlay/match by=namespaceable, expects="1+"
---
metadata:
  #@overlay/match missing_ok=True
  namespace: capi-system

#@overlay/match by=overlay.all, expects="1+"
---
#@overlay/match when=1
subjects:
#@overlay/match by=overlay.subset({"namespace": "system"})
- namespace: capi-system
